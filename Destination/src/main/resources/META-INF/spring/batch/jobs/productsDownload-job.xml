<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	
	<batch:job id="productsDownload">
	<batch:step id="productsDwldPreprocess" next="productsDwldDecider">
			<batch:tasklet ref="productsDwldPreprocessor"/>
		</batch:step>
	
		<batch:step id="productsDwldProcessing" next="productsDwldPreprocess">
			<batch:tasklet>
				<batch:chunk reader="productsDwldReader" writer="productsDwldWriter" 
				commit-interval="${download.commit.interval}" skip-policy="alwaysSkip" retry-limit="0"/>
			</batch:tasklet>
		</batch:step>
		
		 <batch:decision id="productsDwldDecider" decider="productsDwldFlowDecider">
              <batch:next on="PREPROCESS" to="productsDwldPreprocess" />
              <batch:next on="PRODUCTS_DWLD_PROCESSING" to="productsDwldProcessing" />
              <batch:end on="END"/>
         </batch:decision>
	</batch:job>
	
	<!-- Readers -->
	<bean id="productsDwldReader" class="com.tcs.destination.reader.NativeQueryObjectReader" scope="step">
		<property name="repository" ref="productRepository"/>
		<property name="methodName" value="findAll"/>
	</bean>
	
	<!-- Writers -->
	<bean id="productsDwldWriter" class="com.tcs.destination.writer.ProductsDwldWriter" scope="step">
		<property name="template" value="${productSheetTemplate}"/>
		<property name="dataProcessingRequestRepository" ref="dataProcessingRequestRepository"/>
		<property name="fileServerPath" value="${fileserver.path}" />
		<property name="dataProcessingService" ref="dataProcessingService" />
	</bean>
	
		
	<!-- Decider -->
    <bean id="productsDwldFlowDecider" class="com.tcs.destination.decider.ProductsDwldDecider" />
	
	<!-- scheduler  -->
	<bean id="productsDwldScheduler" class="com.tcs.destination.scheduler.JobScheduler">
		<property name="job" ref="productsDownload"/>
	</bean>
	
	<task:scheduled-tasks>
        <task:scheduled ref="productsDwldScheduler" method="run" cron="${products.download.job.cron}"/>
    </task:scheduled-tasks> 

</beans>