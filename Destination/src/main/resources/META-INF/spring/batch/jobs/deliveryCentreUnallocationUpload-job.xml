<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<batch:job id="unallocationUpload">

		<batch:step id="unallocationUploadPreprocess" next="unallocationDecider">
			<batch:tasklet ref="unallocationUploadPreprocessor" />
		</batch:step>

		
		<batch:step id="unallocationUploadProcessing" next="unallocationUploadPreprocess">
			<batch:tasklet>
				<batch:chunk reader="unallocationOverallSpreadSheetReader"
					writer="unallocationCustomWriter" commit-interval="${unallocationUpload.commit.interval}"
					skip-policy="alwaysSkip" retry-limit="0" />
			</batch:tasklet>
		</batch:step>
		
				<batch:decision id="unallocationDecider" decider="unallocationFlowDecider">
			<batch:next on="PREPROCESS" to="unallocationUploadPreprocess" />
			<batch:next on="UNALLOCATION_PROCESSING" to="unallocationUploadProcessing" />
			<batch:end on="END" />
		</batch:decision>
		
	</batch:job>
	
		

	<!-- Readers -->
	<bean id="unallocationOverallSpreadSheetReader" class="com.tcs.destination.reader.SpreadSheetReader"
		scope="step">
		<property name="filePath" value="#{jobExecutionContext['FILE_PATH']}" />
		<property name="sheetName" value="Unallocation" />
		<property name="rowsToSkip" value="1" />
	</bean>
<!-- Readers -->
<bean id="unallocationDeliverySpreadSheetReader" class="com.tcs.destination.reader.SpreadSheetReader"
		scope="step">
		<property name="filePath" value="#{jobExecutionContext['FILE_PATH']}" />
		<property name="sheetName" value="Delivery Center Unallocation" />
		<property name="rowsToSkip" value="1" />
	</bean>
<!-- Writer -->
	<bean id="unallocationCustomWriter" class="com.tcs.destination.writer.UnallocationCustomWriter"
		scope="step">
		<property name="request" value="#{jobExecutionContext['REQUEST']}" />
		<property name="helper" ref="unallocationUploadHelper" />
		<property name="dataProcessingRequestRepository" ref="dataProcessingRequestRepository" />
		<property name="uploadErrorReport" ref="uploadErrorReport" />
		<property name="healthCardOverallPercentageRepository" ref="healthCardOverallPercentageRepository" />
	</bean>
	<!-- Writer -->
		<!-- <bean id="unallocationDeliveryCustomWriter" class="com.tcs.destination.writer.unallocationDeliveryCustomWriter"
		scope="step">
		<property name="request" value="#{jobExecutionContext['REQUEST']}" />
		<property name="helper" ref="unallocationUploadHelper" />
		<property name="dataProcessingRequestRepository" ref="dataProcessingRequestRepository" />
		<property name="uploadErrorReport" ref="uploadErrorReport" />
		<property name="deliveryCentreUnallocationRepository" ref="deliveryCentreUnallocationRepository" />
	</bean> -->

	<!-- Decider -->
	<bean id="unallocationFlowDecider" class="com.tcs.destination.decider.UnallocationDecider" />

	<bean id="uploadErrorReport" class="com.tcs.destination.service.UploadErrorReport" />

	<!-- scheduler -->
	<bean id="unallocationUploadScheduler" class="com.tcs.destination.scheduler.JobScheduler">
		<property name="job" ref="unallocationUpload" />
	</bean>

	<task:scheduled-tasks>
		<task:scheduled ref="unallocationUploadScheduler"
			method="run" cron="${unallocation.upload.job.cron}" />
	</task:scheduled-tasks>

</beans>
	