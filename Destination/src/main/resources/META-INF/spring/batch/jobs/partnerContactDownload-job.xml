<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<batch:job id="partnerContactDownload">
		<batch:step id="partnerContactDownloadPreprocess" next="partnerDecider">
			<batch:tasklet ref="partnerContactDwldPreprocessor" />
		</batch:step>
		<batch:decision id="partnerDecider" decider="partnerFlowdecider">
			<batch:next on="PREPROCESS" to="partnerContactDownloadPreprocess" />
			<batch:next on="PARTNER_DWLD_PROCESSING" to="partnerContactDwldProcessing" />
			<batch:end on="END" />
		</batch:decision>
		<batch:step id="partnerContactDwldProcessing" next="partnerMasterDwldProcessing">
			<batch:tasklet>
				<batch:chunk reader="partnerContactDwldReader" writer="partnerContactDwldWriter"
					commit-interval="${download.commit.interval}" skip-policy="alwaysSkip"
					retry-limit="0" />
			</batch:tasklet>
		</batch:step>
		<batch:step id="partnerMasterDwldProcessing" next="partnerContactDownloadPreprocess">
			<batch:tasklet>
				<batch:chunk reader="partnerMasterDwldReader" writer="partnerMasterDwldWriter"
					commit-interval="${download.commit.interval}" skip-policy="alwaysSkip"
					retry-limit="0" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- Readers -->
	<bean id="partnerMasterDwldReader" class="com.tcs.destination.reader.NativeQueryObjectReader">
		<property name="repository" ref="partnerRepository" />
		<property name="methodName" value="findAll" />
	</bean>
	
	<bean id="partnerContactDwldReader" class="com.tcs.destination.reader.NativeQueryObjectReader">
		<property name="repository" ref="contactRepository" />
		<property name="methodName" value="findAll" />
	</bean>

	<!-- Writers -->
	<bean id="partnerContactDwldWriter" class="com.tcs.destination.writer.PartnerContactDwldWriter">
		<property name="template" value="${partnerContactSheetTemplate}" />
		<property name="dataProcessingRequestRepository" ref="dataProcessingRequestRepository" />
		<property name="dataProcessingService" ref="dataProcessingService" />
		<property name="fileServerPath" value="${fileserver.path}" />
	</bean>
	
		<bean id="partnerMasterDwldWriter" class="com.tcs.destination.writer.PartnerMasterRefDwldWriter">
		 <property name="dataProcessingRequestRepository" ref="dataProcessingRequestRepository"/>
		</bean>

	<!-- Decider -->
	<bean id="partnerFlowdecider" class="com.tcs.destination.decider.PartnerDecider" />

   <!-- scheduler  -->
	<bean id="partnerContactDownloadScheduler" class="com.tcs.destination.scheduler.JobScheduler">
		<property name="job" ref="partnerContactDownload"/>
	</bean>
	
	<task:scheduled-tasks>
        <task:scheduled ref="partnerContactDownloadScheduler" method="run" cron="${partner.contact.download.job.cron}"/>
    </task:scheduled-tasks> 

</beans>
	