<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<description>Destination application configuration.</description>

	<jpa:repositories base-package="com.tcs.destination.data.repository"
		entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="transactionManager" />


	<context:component-scan base-package="com.tcs.destination" />
	
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="application" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="packagesToScan" value="org.springframework.data.repository" />
		<property name="jpaDialect" ref="jpaDialect" />
		<property name="jpaProperties">
       		<props>
	            <prop key="hibernate.format_sql">false</prop>
	            <prop key="hibernate.show_sql">false</prop>
	            <!-- prop key="hibernate.hbm2ddl.auto">update</prop-->
	        </props>
   		 </property>
	</bean>

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="POSTGRESQL" />
		<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
	</bean>
	
	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaDialect" ref="jpaDialect" />
	</bean>


	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${spring.datasource.driver-class-name}" />
		<property name="url" value="${spring.datasource.url}" />
		<property name="username" value="${spring.datasource.username}" />
		<property name="password" value="${spring.datasource.password}" />
	</bean>
	
	<bean id="eventListenerBean" class="com.tcs.destination.DestinationContextListener" />
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	 	<property name="host" value="${smtpHost}" />
        <property name="port" value="${smtpPort}" />
        <property name="username" value="${senderEmailId}" />
        <property name="password" value="${senderPassword}" />
        
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
        </bean>
        
		<bean id="velocityEngine"
			class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
			 <property name="velocityProperties">
				<value>
					resource.loader=class
						class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</value>
			</property>
		</bean>

	<bean id="propertyUtil" class="com.tcs.destination.utils.PropertyUtil">
        <property name="locations">
            <list>
                <value>application.properties</value>
                <value>mailsubject.properties</value>
                <value>batch.properties</value>
                <value>environment_dev.properties</value>
                <!-- value>environment_sit.properties</value-->
                <!-- value>environment_uat.properties</value-->
                <!-- value>environment_prod.properties</value-->
            </list>
        </property>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_NEVER" />
        <property name="order" value="1" />
    </bean> 
	

	<bean id="autoCommentsTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="15" />
		<property name="queueCapacity" value="50" />
	</bean>
	
	<bean id="mailTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="25" />
	</bean>
	
	<bean id="notificationsTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="15" />
		<property name="queueCapacity" value="50" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<import resource="/META-INF/spring/batch/batch-jobs.xml"/>
	
	<bean id="jobRegistryBeanPostProcessor"
		class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>
	
	<bean id="asyncJobLauncher"
	      class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
	    <property name="jobRepository" ref="jobRepository" />
	    <property name="taskExecutor">
	        <bean class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
    </property>
    
</bean>
</beans>